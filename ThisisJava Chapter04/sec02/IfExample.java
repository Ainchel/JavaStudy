package ch04.sec02;

public class IfExample {
	//코드 실행 흐름 제어 + if문에 대하여.
	//자바는 기본적으로 main 메소드의 시작 중괄호에서 끝 중괄호까지 위에서 아래로 실행한다.
	//이러한 실행의 흐름을 개발자가 바꾸는 것이 제어문이다.
	//제어문은 조건식과 중괄호 블록으로 구성되며, 조건식 연산 결과에 따라 중괄호 내부를 실행하거나 실행하지 않는다.
	//제어문은 조건문과 반복문으로 나뉘며, 아래와 같다.
	//1) 조건문 : if문, switch문
	//2) 반복문 : for문, while문, do - while문
	//조건문의 경우, 자신의 중괄호 블록이 끝난 후에는 정상 흐름으로 돌아간다.
	//반복문의 경우, 자신의 중괄호 블록이 끝나도 제어문의 처음으로 다시 돌아갈 수 있다.
	//제어문 내에서도 제어문을 사용하여 복잡한 흐름 제어가 가능하다.
	
	//if문에 대하여.
	//if문은 조건식의 결과에 따라 블록 실행 여부를 결정한다.
	//조건식의 결과가 true라면 if문에 연결된 블록 내의 코드를 실행한다.
	//조건식의 결과가 false라면 if문에 연결된 블록을 건너뛰고 다음 코드를 실행한다.
	//조건식으로는 true 혹은 false값을 산출할 수 있는 연산식이나 boolean 변수가 온다.
	//조건식이 true일 때 실행할 코드가 한줄밖에 없다면, 중괄호를 생략할 수 있다.
	//하지만 중괄호를 생략하지 않는 것을 추천. 가독성이 떨어지며 버그의 원인이 될 수 있다.
	
	//if문과 함께 else를 사용할 수 있는데, if문의 결과가 false일 때 else의 블록이 실행된다.
	
	
	
	public static void main(String[] args) 
	{
		//아래는 if문에서 블록을 생략하여 발생할 수 있는 상황에 대한 예제.
		
		int score = 93;
		
		if(score >= 90) {
			System.out.println("점수가 90보다 큽니다.");
			System.out.println("등급은 A입니다.");
		}
		
		if(score < 90) // 여기서 중괄호 생략. 아래 코드 한 줄만 실행된다.
			System.out.println("점수가 90보다 작습니다.");
			System.out.println("등급은 B입니다."); // 중괄호를 생략하면 if문 다음의 한줄만 코드가 실행되므로, 이 줄은 조건에 따라 노출되어야 함에도 if의 결과와 상관없이 노출된다. NG임.	
						
	}

}
