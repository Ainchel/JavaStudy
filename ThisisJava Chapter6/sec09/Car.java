package ch06.sec09;

public class Car {

	//인스턴스 멤버에 대하여.
	//클래스의 필드와 메소드는 선언하는 방법에 따라 인스턴스 멤버와 정적 멤버로 분류된다.
	//인스턴스 멤버로 선언되면 필드와 메소드는 객체를 생성한 후 사용 가능하다.
	//정적 멤버로 선언되면 객체 생성을 안 해도 필드나 메소드를 사용할 수 있다.
	
	//인스턴스 멤버 : 객체에 소속되어 있는 멤버 - 객체를 생성해야 실행이 가능.
	//정적 멤버 : 클래스에 고정되어 있는 멤버 - 객체를 생성하지 않아도 사용이 가능하다.
	
	//인스턴스 멤버란 객체에 소속된 멤버를 말하며, 객체가 있어야만 사용이 가능하다.
	//인스턴스 멤버 중 필드는 각 객체마다 각각 존재하지만, 메소드는 각 객체마다 존재하지 않는다.
	//그 이유는 메모리 때문인데, 동일한 메소드를 중복해서 저장하면 메모리 효율이 떨어지기 때문이다.
	//따라서, 같은 클래스의 객체들은 메소드를 메소드 영역에 하나만 두고 공유하여 사용한다.
	
	//클래스 내부에서는 인스턴스의 멤버에 접근하기 위해 "this" 라는 것을 사용할 수 있다.
	//생성자와 메소드에 넣은 매개변수 이름이 필드의 이름과 동일할 경우, 필드임을 강조하기 위해 "this" 를 주로 사용한다.
	
	//필드 선언
	String model;
	int speed;
	
	//생성자
	Car(String model){
		this.model = model; //매개변수와 필드명이 같은 상황에서, 필드에 "this."을 붙여 필드임을 강조할 수 있다.
	}
	
	//메소드
	void setSpeed(int speed) {
		this.speed = speed;
	}
	
	void run() {
		this.setSpeed(100);
		System.out.println(this.model + "가 달립니다.(시속 : " + this.speed + "km/h)");
	}
	
}
