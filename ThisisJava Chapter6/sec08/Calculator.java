package ch06.sec08;

	//메소드의 선언과 호출에 대하여.
	//클래스에서의 메소드 선언이란, 클래스 객체의 동작을 블록내에 정의하는 것이다.
	//메소드의 호출이란, 동작을 정의한 블록 내 코드를 실제로 실행하는 것이다.
	//메소드는 다른 객체에서도 호출될 수 있으므로, 객체와 객체가 상호작용하는 방식이라고도 할 수 있다.
	
	//메소드를 선언하는 방법은 아래와 같다.
	//리턴타입 메소드명 (매개변수, ...)       <<선언부
	//{        						  <<실행 블록
	//
	//
	//}
	
	//아래부터 메소드의 구성에 대한 간략한 설명.
	//1)리턴 타입이란, 메소드가 실행된 후 호출된 위치에 전달할 결과값의 타입을 나타낸다.
	//리턴할 결과값이 없다면, 리턴 타입을 void로 설정해야 한다.
	//void가 아닌 리턴 타입은, 실행 블록 안에서 반드시 return문을 통해 반환할 결과값을 지정해야만 한다.

	//2)메소드명은 첫 문자를 소문자로 시작하는 캐멀 스타일(단어의 구분마다 첫글자를 대문자로)로 작성한다.
	
	//3)매개변수는, 메소드를 호출(실행)할 때 코드에 전달할 매개값을 받기 위해 사용한다.
	//코드의 구성에 따라 매개변수가 필요하거나 필요없을 수 있으며, 필요없을 경우 생략한다.
	
	//4)메소드의 실행 블록은, 메소드 호출 시 실제로 실행되는 코드의 블록이다.
	
	//메소드를 호출한다는 것은, 메소드에 선언된 블록을 실행하는 것을 말한다.
	//메소드를 선언만 했다고 해서 호출을 할 수는 없다. 해당 동작을 실행할 객체가 없기 때문이다.
	//객체가 생성된 이후의 메소드는, 생성자나 다른 메소드의 내부, 객체 외부에서도 호출될 수 있다.
	//객체 내부에서의 메소드 호출은 메소드명과 매개변수만으로 가능하다.
	//하지만 외부 객채에서 메소드를 호출하려면 해당 객체를 참조 중인 변수와 .연산자를 사용해야 한다.
	//메소드가 매개변수를 필요로 한다면, 매개변수의 타입과 개수를 정확히 제공해야 호출할 수 있다.
	
	//메소드가 리턴값을 가지는 경우, 대입연사자를 통해 변수에 리턴값을 저장할 수 있다.
	//이 때, 해당 변수는 리턴값과 동일한 데이터타입이거나, 자동 타입 변환이 가능한 상태여야 한다.
	

public class Calculator {
	//아래는 클래스 내에서 메소드를 선언하는 방법에 대한 예제.
	void powerOn() { //리턴값이 없는(리턴 타입이 void인) 메소드 선언
		System.out.println("전원을 켭니다.");
	}
	
	void powerOff() { //리턴값이 없는 메소드 선언(타입 void)
		System.out.println("전원을 끕니다.");
	}
	
	int plus(int x, int y) { //리턴 타입이 int이며, 매개변수가 정수 2개인 함수 선언
	//이 메소드는 호출하려면 정수 2개를 매개값으로 넣어야 하며, 호출한 위치에 결과값으로 int 타입 정수를 반환한다.
		int result = x + y;
		return result; // 함수가 호출된 위치에 result 값을 넣어준다.
	}
	
	double divide(int x, int y) {//리턴 타입이 double이며, 매개변수가 정수 2개인 함수 선언
	//이 메소드는 호출하려면 정수 2개를 매개값으로 넣어야 하며, 호출한 위치에 결과값으로 double 타입 실수를 반환한다.
	double result = (double) x / (double) y;
	return result; // 함수가 호출된 위치에 result 값을 넣어준다.
	}

	public double areaRectangle(int i) {
		// TODO Auto-generated method stub
		return 0;
	}
	
}
