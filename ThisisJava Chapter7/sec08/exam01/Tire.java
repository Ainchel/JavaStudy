package ch07.sec08.exam01;

//다형성에 대하여.

//다형성이란, 사용 방법은 동일하지만 다른 실행 결과가 나오는 성질을 말한다.

//예를 들면, 자동차의 "타이어" 라는 부품이 있을 때, 다른 타이어를 사용하면 다른 성능을 내는 것과 같다.
//프로그래밍에서는, 객체를 바꾸어 프로그램의 실행 성능을 다르게 내는 것을 가리킨다.

//위의 사용 방법이 동일하다는 것은, 서로 다른 객체가 동일한 메소드를 가지고 있다는 듯이다.
//자동차 예시를 다시 가져오자면, 서로 다른 타이어끼리 동일한 메소드(구른다 등)를 가진다는 것이다.
//그리고 서로 다른 타이어가 동일한 메소드를 오버라이딩하되, 실행 내용을 달리 한다면 결과가 달리 나올 것이다.

//이것을 다형성이라고 하며, 사용을 위해서는 클래스 자동 타입 변환과 메소드 오버라이딩이 필요하다.

//필드의 다형성 : 어떤 클래스의 필드가 있을 떄, 그 필드에 다형성을 적용하면 여러 종류의 자식 객체를 통해 실행 결과를 다양하게 나눌 수 있다.
//다형성이 적용된 필드는, 그 필드의 자식 클래스에 메소드를 오버라이딩 시켜둠으로써, 객체를 생성할 때 자식 클래스를 자유롭게 바꿔끼어 메소드의 실행 결과를 바꿀 수 있다. (예제 참조)

public class Tire {

	//메소드 선언
	public void roll() {
		System.out.println("회전합니다.");
	}
	
}
