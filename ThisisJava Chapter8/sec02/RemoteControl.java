package ch08.sec02;

//인터페이스에 대해.

//인터페이스는 다형성을 적용할 때 주로 이용한다.
//인터페이스는 어떤 객체의 메소드를 연결하여, 다른 객체(메인 함수 포함)에서 해당 객체(인터페이스에 붙여둔 클래스)의 메소드를 호출하게끔 도와준다.
//인터페이스를 사용하면 좋은 점은, 객체를 갈아끼우듯이 사용하기 때문에 해당 객체들의 코드를 손볼 필요가 없다는 것이다.
//말로만 설명하면 어려우니, 예제를 같이 확인해보자.

//인터페이스는 클래스처럼 선언되나, class 대신 interface 키워드를 사용한다.
//접근 제한자도 사용 가능하며, 패키지 내 사용 가능한 default 혹은 public을 사용한다.

//인터페이스도 멤버를 가질 수 있으며, 종류는 아래와 같다.

//public interface 인터페이스명{
//
// public 상수 필드
// public 추상 메소드
// public 디폴트 메소드
// public 정적 메소드
// private 메소드
// private 정적 메소드
//
//}

//이번 예제에서는, 인터페이스의 추상 메소드 예제를 써본다.

public interface RemoteControl {
	
	// 위 멤버들 중, public 추상 메소드 선언
	public void turnOn(); // 추상메소드는 중괄호 및 내용 없음.
}